//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "batch_status")]
pub enum BatchStatus {
    #[sea_orm(string_value = "open")]
    Open,
    #[sea_orm(string_value = "closed")]
    Closed,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "purchase_category")]
pub enum PurchaseCategory {
    #[sea_orm(string_value = "bird")]
    Bird,
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "requirement_category"
)]
pub enum RequirementCategory {
    #[sea_orm(string_value = "bird")]
    Bird,
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "supplier_type")]
pub enum SupplierType {
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "chick")]
    Chick,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize, Hash)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "user_role")]
pub enum UserRole {
    #[sea_orm(string_value = "admin")]
    Admin,
    #[sea_orm(string_value = "supervisor")]
    Supervisor,
    #[sea_orm(string_value = "accountant")]
    Accountant,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "requirement_status")]
pub enum RequirementStatus {
    #[sea_orm(string_value = "accept")]
    Accept,
    #[sea_orm(string_value = "decline")]
    Decline,
    #[sea_orm(string_value = "pending")]
    Pending,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "movement_type")]
pub enum MovementType {
    #[sea_orm(string_value = "purchase")]
    Purchase,
    #[sea_orm(string_value = "allocation")]
    Allocation,
    #[sea_orm(string_value = "adjustment")]
    Adjustment,
    #[sea_orm(string_value = "transfer")]
    Transfer,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ledger_account_type"
)]
pub enum LedgerAccountType {
    #[sea_orm(string_value = "asset")]
    Asset,
    #[sea_orm(string_value = "liability")]
    Liability,
    #[sea_orm(string_value = "equity")]
    Equity,
    #[sea_orm(string_value = "revenue")]
    Revenue,
    #[sea_orm(string_value = "expense")]
    Expense,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "item_category")]
pub enum ItemCategory {
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "medicine")]
    Medicine,
    #[sea_orm(string_value = "chicks")]
    Chicks,
}
