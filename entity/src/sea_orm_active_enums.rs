//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum,Serialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "batch_status")]
pub enum BatchStatus {
    #[sea_orm(string_value = "open")]
    Open,
    #[sea_orm(string_value = "closed")]
    Closed,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum,Serialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "purchase_category")]
pub enum PurchaseCategory {
    #[sea_orm(string_value = "bird")]
    Bird,
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum,Serialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "requirement_category"
)]
pub enum RequirementCategory {
    #[sea_orm(string_value = "bird")]
    Bird,
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum,Serialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "supplier_type")]
pub enum SupplierType {
    #[sea_orm(string_value = "feed")]
    Feed,
    #[sea_orm(string_value = "chick")]
    Chick,
    #[sea_orm(string_value = "medicine")]
    Medicine,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum,Serialize,Deserialize,Hash)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "user_role")]
pub enum UserRole {
    #[sea_orm(string_value = "admin")]
    Admin,
    #[sea_orm(string_value = "supervisor")]
    Supervisor,
    #[sea_orm(string_value = "accountant")]
    Accountant,
}
