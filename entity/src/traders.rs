//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "traders")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub trader_id: i32,
    pub name: String,
    #[sea_orm(unique)]
    pub phone_number: String,
    #[sea_orm(column_type = "Text")]
    pub address: String,
    pub bank_account_no: String,
    pub bank_name: String,
    pub ifsc_code: String,
    pub area: String,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::bird_sell_history::Entity")]
    BirdSellHistory,
}

impl Related<super::bird_sell_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BirdSellHistory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
